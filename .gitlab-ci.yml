variables:
  SERVER_USER: deployer
  FRONTEND_PORT_DEV: 80
  BACKEND_PORT_DEV: 8080

stages:
  - test
  - deploy

image: node:16.5

cache:
  paths:
    - front/node_modules/
    - back/node_modules/

front:
  stage: test
  script:
    - cd front
    - npm ci
    - npm run test
    - npm run typecheck
    - npm run build

back:
  stage: test
  script:
    - cd back
    - npm ci
    - npm run test:all
    - npm run typecheck

sonarqube-check:
  stage: test
  image:
    name: sonarsource/sonar-scanner-cli:latest
  variables:
    SONAR_TOKEN: "${SONAR_TOKEN}"
    SONAR_HOST_URL: "https://sonarqube.beta.pole-emploi.fr"
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar" # Defines the location of the analysis task cache
    GIT_DEPTH: 0 # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: ${CI_JOB_NAME}
    paths:
      - .sonar/cache
  script:
    - npm install typescript
    - sonar-scanner -Dsonar.qualitygate.wait=true -Dsonar.projectKey=immersion-facile -Dsonar.scm.disabled=true
  allow_failure: true
  only:
    - dev

deploy_on_dev:
  cache: []
  only:
    - dev
  image: alpine:latest
  stage: deploy
  environment:
    name: dev
  script:
    - chmod og= $DEPLOYER_ID_RSA_DEV
    - echo $SERVER_USER
    - apk update && apk add openssh-client
    - scp -i $DEPLOYER_ID_RSA_DEV -o StrictHostKeyChecking=no $SECRETS $SERVER_USER@$DEPLOYER_SERVER_IP_DEV:/home/docker/immersion-facile-dev/.env.secrets
    - scp -i $DEPLOYER_ID_RSA_DEV -o StrictHostKeyChecking=no $VARIABLES $SERVER_USER@$DEPLOYER_SERVER_IP_DEV:/home/docker/immersion-facile-dev/.env.variables
    - ssh -i $DEPLOYER_ID_RSA_DEV -o StrictHostKeyChecking=no $SERVER_USER@$DEPLOYER_SERVER_IP_DEV "cd /home/docker/immersion-facile-dev &&
      chmod 600 .env.secrets;
      chmod 600 .env.variables;

      git checkout dev &&
      git fetch &&
      git reset --hard origin/dev &&

      touch .env;
      chmod 600 .env;

      cat .env.variables <(echo) .env.secrets <(echo) > .env;
      rm -f .env.variables .env.secrets;

      docker-compose --env-file .env build;
      docker-compose down;
      docker-compose up -d &&
      rm -f .env;"

deploy_on_beta:
  cache: []
  only:
    - beta
  image: alpine:latest
  stage: deploy
  environment:
    name: beta
  script:
    - chmod og= $DEPLOYER_ID_RSA_DEV
    - echo $SERVER_USER
    - apk update && apk add openssh-client
    - scp -i $DEPLOYER_ID_RSA_DEV -o StrictHostKeyChecking=no $SECRETS $SERVER_USER@$DEPLOYER_SERVER_IP_DEV:/home/docker/immersion-facile/.env.secrets
    - scp -i $DEPLOYER_ID_RSA_DEV -o StrictHostKeyChecking=no $VARIABLES $SERVER_USER@$DEPLOYER_SERVER_IP_DEV:/home/docker/immersion-facile/.env.variables
    - ssh -i $DEPLOYER_ID_RSA_DEV -o StrictHostKeyChecking=no $SERVER_USER@$DEPLOYER_SERVER_IP_DEV "cd /home/docker/immersion-facile &&
        chmod 600 .env.secrets;
        chmod 600 .env.variables;
        git checkout beta &&
        git fetch &&
        git reset --hard origin/beta &&

        touch .env;
        chmod 600 .env;
        cat .env.variables <(echo) .env.secrets <(echo) > .env;
        rm -f .env.variables .env.secrets;

        docker-compose --env-file .env build;
        docker-compose down;
        docker-compose up -d &&
        rm -f .env;"
