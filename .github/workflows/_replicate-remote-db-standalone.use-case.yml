# This is a Work In Progress
# Example usage
# my-replication-job:
#   uses: .github/workflows/replicate-db.use-case.yml
#   with:
#     application-name: 'my-app'
#     addon-plan-postgresql: 'postgresql-starter-1024'
#     extensions: 'postgis,hstore'
#   secrets:
#     SCALINGO_API_TOKEN: ${{ secrets.SCALINGO_API_TOKEN }}

name: zReusable Replicate a remote database a standalone app

on:
  workflow_call:
    inputs:
      application-name:
        required: true
        type: string
      addon-plan-postgresql:
        required: true
        type: string
      extensions:
        required: false
        type: string
        default: ""
    secrets:
      SCALINGO_API_TOKEN:
        required: true
      REMOTE_DATABASE_URL:
        required: true

    outputs:
      status:
        description: "'database-created' or 'database-updated' if successful"
        value: ${{ jobs.status-report.outputs.status }}

jobs:
  create-application-on-scalingo:
    uses: .github/workflows/_prepare-application-and-keys.scalingo.reusable.yml
    with:
      application-name: ${{ inputs.application-name }}
    secrets:
      SCALINGO_API_TOKEN: ${{ secrets.SCALINGO_API_TOKEN }}

  reset-database-addon:
    needs:
      - create-application-on-scalingo

    uses: .github/workflows/_setup-addon.postgresql.scalingo.reusable.yml
    with:
      application-name: ${{ inputs.application-name }}
      addon-plan-postgresql: ${{ inputs.addon-plan-postgresql }}
      reset: true
    secrets:
      SCALINGO_API_TOKEN: ${{ secrets.SCALINGO_API_TOKEN }}

  wait-addon-running:
    needs:
      - reset-database-addon

    runs-on: ubuntu-latest
    steps:
      - name: Wait for addon
        run: sleep 120s

  install-postgresql-extensions:
    needs:
      - reset-database-addon
      - wait-addon-running

    if: inputs.extensions

    uses: .github/workflows/_create-extension.postgresql.scalingo.reusable.yml
    with:
      extensions-as-comma-separated-string: ${{ inputs.extensions }}
      application-name: ${{ inputs.application-name }}
    secrets:
      SCALINGO_API_TOKEN: ${{ secrets.SCALINGO_API_TOKEN }}

  replicate-remote-db:
    needs:
      - install-postgresql-extensions

    if: needs.install-postgresql-extensions.result == 'success' || needs.install-postgresql-extensions.result != 'skipped'

    uses: ./.github/workflows/_replicate-remote-db.postgresql.scalingo.reusable.yml
    with:
      application-name: ${{ inputs.application-name }}
    secrets:
      SCALINGO_API_TOKEN: ${{ secrets.SCALINGO_API_TOKEN }}
      REMOTE_DATABASE_URL: ${{ secrets.REMOTE_DATABASE_URL }}
