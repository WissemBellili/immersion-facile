version: "3"
services:
  back:
    build:
      context: "./back"
      dockerfile: Dockerfile.back
    env_file:
      - .env
    depends_on:
      - postgres
    restart: unless-stopped

  front:
    build:
      context: "."
      dockerfile: Dockerfile.front
    env_file:
      - .env

  pipelines:
    build:
      context: ./back
      dockerfile: Dockerfile.pipelines
    env_file:
      - .env
    environment:
      - LOGDIR=/var/lib/pipelines/log
      - CRONFILE=/var/lib/pipelines/crontab
      - ESTABLISHMENT_BACKFILL_SCHEDULE
    volumes:
      - ./docker-data/pipelines:/var/lib/pipelines
      - ./.env:/app/.env

  nginx:
    restart: unless-stopped
    depends_on:
      - front
      - back
    build:
      context: ./nginx
      dockerfile: Dockerfile.nginx
      args:
        - ENV_TYPE=${ENV_TYPE:-develop}
        - DOMAIN=${DOMAIN:-domain.tld}
        - LETSENCRYPT_MAIL=${LETSENCRYPT_MAIL:-not_provided@mail.com}
        - ADMIN_ALLOWED_IP=${ADMIN_ALLOWED_IP:-}
    ports:
      - "${EXPOSED_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/etc/letsencrypt:/etc/letsencrypt
      - ./nginx/etc/nginx/conf.d/:/etc/nginx/conf.d/

  postgres:
    image: postgis/postgis:13-master
    environment:
      POSTGRES_DB: immersion-db
      POSTGRES_USER: immersion
      POSTGRES_PASSWORD: pg-password
    volumes:
      - ./docker-data/postgresql:/var/lib/postgresql/data

  adminer:
    image: adminer
